Find Node/Value Algorithm:

boolean done = false;
Set<Node> prevQueried = new HashSet<Node>();
Set<Node> querySet = new HashSet<Node>(getNearestNodes(targetID, alpha));


while (!done) {
  SortedSet<Node> foundNodesSet = new TreeSet<Node>(new IdentifiableDistanceComparator(targetID));
  prevQueried.addAll(querySet);
  for (Node node : querySet) {
    //in parallel, event based
    FindNodeResult fnr = executeFindNode(node, targetID);
    if (fnr.found()) {
      return fnr;
    }
    foundNodesSet.addAll(fnr.nodes());    
  }
  networkInstance.getBuckets().addAll(foundNodesSet);
  
  Set<Node> newQuerySet = new HashSet((new ArrayList(foundNodesSet)).subList(0, foundNodesSet.size() > alpha ? alpha : foundNodesSet.size()));
  newQuerySet.removeAll(prevQueried);
  querySet = newQuerySet;
  
  if (querySet.size() == 0) {
    done = true;
    querySet = new HashSet<Node>(getNearestNodes(targetID, k, excluding: prevQueried));
  }
}


